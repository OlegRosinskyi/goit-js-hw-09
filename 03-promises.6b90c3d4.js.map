{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,SAIhCC,GAHWF,SAASC,cAAc,UAGnB,IAErB,SAASE,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAGtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAgCPN,EAAOc,iBAAiB,UA5BP,SAAAC,GACfA,EAAMC,iBACNC,QAAQC,IAAIH,EAAMI,MAClB,IAEuBC,EAAnBL,EAAMM,cADRC,SAAYC,EAAKH,EAALd,MAAOkB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAE3B,GAAoB,KAAhBF,EAAMG,OAA+B,KAAfF,EAAKE,OAAiC,KAAjBD,EAAOC,MACpD,OAAOC,MAAM,6BAOf,IAJqB,IAAfC,EAASL,EAAMM,cACfC,EAAQN,EAAKK,cACbE,EAAUN,EAAOI,cAEdG,EAAI,EAAGA,EAAID,EAAU,EAAGC,GAAK,EACpC7B,EAAa8B,KAAK,IAClB7B,EAAc4B,EAAGJ,EAASE,GAASE,EAAI,IACpCE,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MACjBW,QAAQC,IAAI,uBAAwCkB,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAE3D+B,OAAM,SAAAF,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAClBW,QAAQC,IAAI,sBAAqCkB,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAG7DS,EAAMM,cAAciB,O","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\nconst buttonEl = document.querySelector('button');\n//console.log(buttonEl);\n\nconst resultPromis = [];\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  //console.log(shouldResolve);\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst onSubmit = event => {\n  event.preventDefault();\n  console.log(event.type);\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  if (delay.value === '' || step.value === '' || amount.value === '') {\n    return alert('Заповнить всі поля форми>');\n  }\n\n  const delayF = delay.valueAsNumber;\n  const stepF = step.valueAsNumber;\n  const amountF = amount.valueAsNumber;\n\n  for (let i = 1; i < amountF + 1; i += 1) {\n    resultPromis.push({});\n    createPromise(i, delayF + stepF * (i - 1))\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  event.currentTarget.reset();\n};\n\n//formEl.addEventListener('input', inputForm);\nformEl.addEventListener('submit', onSubmit);\n"],"names":["$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$resultPromis","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","console","log","type","_elements","currentTarget","elements","delay1","step","amount","value","alert","delayF","valueAsNumber","stepF","amountF","i","push","then","param","concat","catch","reset"],"version":3,"file":"03-promises.6b90c3d4.js.map"}