{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,SAGhCC,GAFWF,SAASC,cAAc,UAEvB,CACfE,OAASC,MAAQ,EACjBC,MAAQC,KAAO,EACfC,QAAUC,OAAS,IAEfC,EAAe,GAErB,SAASC,EAAcC,EAAUP,GAC/BQ,YAAW,WACaC,KAAKC,SAGX,IAAIC,SAAQ,SAACC,EAASC,GAIlCD,EAAQ,CAAEL,SAAUA,EAAUP,MAAOA,G,IAOjCc,MACN,SAAAC,GAEEV,EAAaE,EAAW,GAAKQ,EAG3BC,QAAMC,IAAIZ,E,IAEd,SAAAa,GAGIb,EAAWE,EAAW,GAAKW,EAE7BF,QAAQC,IAAIZ,E,MAGfL,E,CA4BLL,EAAOwB,iBAAiB,UAzBP,SAAAC,GACfA,EAAMC,iBACNL,QAAQC,IAAIG,EAAME,MAClB,IAEuBC,EAAnBH,EAAMI,cADRC,SAAYC,EAAKH,EAALvB,MAAO2B,EAAIJ,EAAJrB,KAAM0B,EAAML,EAANnB,OAE3B,GAAoB,KAAhBsB,EAAMG,OAA+B,KAAfF,EAAKE,OAAiC,KAAjBD,EAAOC,MACpD,OAAOC,MAAM,6BAKfhC,EAASC,OAAS2B,EAAMK,cACxBjC,EAASG,MAAQ0B,EAAKI,cACtBjC,EAASK,QAAUyB,EAAOG,cAC1Bf,QAAQC,IAAInB,GAEZ,IAAK,IAAIkC,EAAI,EAAGA,EAAIlC,EAASK,QAAU,EAAG6B,GAAK,EAC7C3B,EAAa4B,KAAK,IAClB3B,EAAc0B,EAAGlC,EAASC,OAASD,EAASG,OAAS+B,EAAI,IAE3DZ,EAAMI,cAAcU,O","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\nconst buttonEl = document.querySelector('button');\n//console.log(buttonEl);\nconst dataForm = {\n  delayF: (delay = 0),\n  stepF: (step = 0),\n  amountF: (amount = 0),\n};\nconst resultPromis = [];\n\nfunction createPromise(position, delay) {\n  setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n    //console.log(shouldResolve);\n\n    const promise = new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        //resolve(`✅ Fulfilled promise ${position} in ${delay}ms`); // Fulfill\n        //resolve(position)(delay);\n        resolve({ position: position, delay: delay });\n      } else {\n        //reject(`❌ Rejected promise ${position} in ${delay}ms`); // Reject\n        // resolve(position);\n        resolve({ position: position, delay: delay });\n      }\n    });\n    promise.then(\n      result => {\n        //console.log(result);\n        resultPromis[position - 1] = result;\n        //resultPromis[position - 1].delay = result;\n        // alert(`✅ \"${result}\"`);\n        console.log(resultPromis);\n      },\n      error => {\n        // console.log(error);\n        // alert(`❌ \"${error}\"`);\n        resultPromis[position - 1] = error;\n        //resultPromis[position - 1].delay = error;\n        console.log(resultPromis);\n      }\n    );\n  }, delay);\n}\n\nconst onSubmit = event => {\n  event.preventDefault();\n  console.log(event.type);\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  if (delay.value === '' || step.value === '' || amount.value === '') {\n    return alert('Заповнить всі поля форми>');\n  }\n\n  // console.log(`email: ${email.value}, Password: ${password.value}`);\n\n  dataForm.delayF = delay.valueAsNumber;\n  dataForm.stepF = step.valueAsNumber;\n  dataForm.amountF = amount.valueAsNumber;\n  console.log(dataForm);\n\n  for (let i = 1; i < dataForm.amountF + 1; i += 1) {\n    resultPromis.push({});\n    createPromise(i, dataForm.delayF + dataForm.stepF * (i - 1));\n  }\n  event.currentTarget.reset();\n};\n\n//formEl.addEventListener('input', inputForm);\nformEl.addEventListener('submit', onSubmit);\n"],"names":["$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$dataForm","delayF","delay","stepF","step","amountF","amount","$ce04d3a99e08e73b$var$resultPromis","$ce04d3a99e08e73b$var$createPromise","position","setTimeout","Math","random","Promise","resolve","reject","then","result","console","log","error","addEventListener","event","preventDefault","type","_elements","currentTarget","elements","_$delay","_$step","_$amount","value","alert","valueAsNumber","i","push","reset"],"version":3,"file":"03-promises.f68984a1.js.map"}