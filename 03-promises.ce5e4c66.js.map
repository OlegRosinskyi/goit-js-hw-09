{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,SAIhCC,GAHWF,SAASC,cAAc,UAGnB,IAErB,SAASE,EAAcC,EAAUC,GAC/BC,YAAW,WACaC,KAAKC,SAGX,IAAIC,SAAQ,SAACC,EAASC,GAIlCD,EAAQ,CAAEN,SAAUA,EAAUC,MAAOA,G,IAOjCO,MACN,SAAAC,GAEEX,EAAaE,EAAW,GAAKS,EAG3BC,QAAMC,IAAIb,E,IAEd,SAAAc,GAGId,EAAWE,EAAW,GAAKY,EAE7BF,QAAQC,IAAIb,E,MAGfG,E,CA0BLN,EAAOkB,iBAAiB,UAvBP,SAAAC,GACfA,EAAMC,iBACNL,QAAQC,IAAIG,EAAME,MAClB,IAEuBC,EAAnBH,EAAMI,cADRC,SAAYlB,EAAKgB,EAALhB,MAAOmB,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,OAE3B,GAAoB,KAAhBpB,EAAMqB,OAA+B,KAAfF,EAAKE,OAAiC,KAAjBD,EAAOC,MACpD,OAAOC,MAAM,6BAQf,IAJA,IAAMC,EAASvB,EAAMwB,cACfC,EAAQN,EAAKK,cACbE,EAAUN,EAAOI,cAEdG,EAAI,EAAGA,EAAID,EAAU,EAAGC,GAAK,EACpC9B,EAAa+B,KAAK,IAClB9B,EAAc6B,EAAGJ,EAASE,GAASE,EAAI,IAEzCd,EAAMI,cAAcY,O","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\nconst buttonEl = document.querySelector('button');\n//console.log(buttonEl);\n\nconst resultPromis = [];\n\nfunction createPromise(position, delay) {\n  setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n    //console.log(shouldResolve);\n\n    const promise = new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        //resolve(`✅ Fulfilled promise ${position} in ${delay}ms`); // Fulfill\n        //resolve(position)(delay);\n        resolve({ position: position, delay: delay });\n      } else {\n        //reject(`❌ Rejected promise ${position} in ${delay}ms`); // Reject\n        // resolve(position);\n        resolve({ position: position, delay: delay });\n      }\n    });\n    promise.then(\n      result => {\n        //console.log(result);\n        resultPromis[position - 1] = result;\n        //resultPromis[position - 1].delay = result;\n        // alert(`✅ \"${result}\"`);\n        console.log(resultPromis);\n      },\n      error => {\n        // console.log(error);\n        // alert(`❌ \"${error}\"`);\n        resultPromis[position - 1] = error;\n        //resultPromis[position - 1].delay = error;\n        console.log(resultPromis);\n      }\n    );\n  }, delay);\n}\n\nconst onSubmit = event => {\n  event.preventDefault();\n  console.log(event.type);\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  if (delay.value === '' || step.value === '' || amount.value === '') {\n    return alert('Заповнить всі поля форми>');\n  }\n\n  // console.log(`email: ${email.value}, Password: ${password.value}`);\n  const delayF = delay.valueAsNumber;\n  const stepF = step.valueAsNumber;\n  const amountF = amount.valueAsNumber;\n\n  for (let i = 1; i < amountF + 1; i += 1) {\n    resultPromis.push({});\n    createPromise(i, delayF + stepF * (i - 1));\n  }\n  event.currentTarget.reset();\n};\n\n//formEl.addEventListener('input', inputForm);\nformEl.addEventListener('submit', onSubmit);\n"],"names":["$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$resultPromis","$ce04d3a99e08e73b$var$createPromise","position","delay","setTimeout","Math","random","Promise","resolve","reject","then","result","console","log","error","addEventListener","event","preventDefault","type","_elements","currentTarget","elements","step","amount","value","alert","delayF","valueAsNumber","stepF","amountF","i","push","reset"],"version":3,"file":"03-promises.ce5e4c66.js.map"}