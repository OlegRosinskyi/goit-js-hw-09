{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,SAGhCC,GAFWF,SAASC,cAAc,UAEvB,CACfE,OAASC,MAAQ,EACjBC,MAAQC,KAAO,EACfC,QAAUC,OAAS,IAEfC,EAAe,GAErB,SAASC,EAAcC,EAAUP,GAC/BQ,YAAW,KACaC,KAAKC,SAGX,IAAIC,SAAQ,CAACC,EAASC,KAIlCD,EAAQ,CAAEL,SAAUA,EAAUP,MAAOA,GAIQ,IAGzCc,MACNC,IAEEV,EAAaE,EAAW,GAAKQ,EAG3BC,QAAMC,IAAIZ,EAAa,IAE3Ba,IAGIb,EAAWE,EAAW,GAAKW,EAE7BF,QAAQC,IAAIZ,EAAa,GAE5B,GACAL,E,CA4BLL,EAAOwB,iBAAiB,UAzBPC,IACfA,EAAMC,iBACNL,QAAQC,IAAIG,EAAME,MAClB,MACEC,UAAUvB,MAAEA,EAAKE,KAAEA,EAAIE,OAAEA,IACvBgB,EAAMI,cACV,GAAoB,KAAhBxB,EAAMyB,OAA+B,KAAfvB,EAAKuB,OAAiC,KAAjBrB,EAAOqB,MACpD,OAAOC,MAAM,6BAKf5B,EAASC,OAASC,EAAM2B,cACxB7B,EAASG,MAAQC,EAAKyB,cACtB7B,EAASK,QAAUC,EAAOuB,cAC1BX,QAAQC,IAAInB,GAEZ,IAAK,IAAI8B,EAAI,EAAGA,EAAI9B,EAASK,QAAU,EAAGyB,GAAK,EAC7CvB,EAAawB,KAAK,IAClBvB,EAAcsB,EAAG9B,EAASC,OAASD,EAASG,OAAS2B,EAAI,IAE3DR,EAAMI,cAAcM,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\nconst buttonEl = document.querySelector('button');\n//console.log(buttonEl);\nconst dataForm = {\n  delayF: (delay = 0),\n  stepF: (step = 0),\n  amountF: (amount = 0),\n};\nconst resultPromis = [];\n\nfunction createPromise(position, delay) {\n  setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n    //console.log(shouldResolve);\n\n    const promise = new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        //resolve(`✅ Fulfilled promise ${position} in ${delay}ms`); // Fulfill\n        //resolve(position)(delay);\n        resolve({ position: position, delay: delay });\n      } else {\n        //reject(`❌ Rejected promise ${position} in ${delay}ms`); // Reject\n        // resolve(position);\n        resolve({ position: position, delay: delay });\n      }\n    });\n    promise.then(\n      result => {\n        //console.log(result);\n        resultPromis[position - 1] = result;\n        //resultPromis[position - 1].delay = result;\n        // alert(`✅ \"${result}\"`);\n        console.log(resultPromis);\n      },\n      error => {\n        // console.log(error);\n        // alert(`❌ \"${error}\"`);\n        resultPromis[position - 1] = error;\n        //resultPromis[position - 1].delay = error;\n        console.log(resultPromis);\n      }\n    );\n  }, delay);\n}\n\nconst onSubmit = event => {\n  event.preventDefault();\n  console.log(event.type);\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  if (delay.value === '' || step.value === '' || amount.value === '') {\n    return alert('Заповнить всі поля форми>');\n  }\n\n  // console.log(`email: ${email.value}, Password: ${password.value}`);\n\n  dataForm.delayF = delay.valueAsNumber;\n  dataForm.stepF = step.valueAsNumber;\n  dataForm.amountF = amount.valueAsNumber;\n  console.log(dataForm);\n\n  for (let i = 1; i < dataForm.amountF + 1; i += 1) {\n    resultPromis.push({});\n    createPromise(i, dataForm.delayF + dataForm.stepF * (i - 1));\n  }\n  event.currentTarget.reset();\n};\n\n//formEl.addEventListener('input', inputForm);\nformEl.addEventListener('submit', onSubmit);\n"],"names":["$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$dataForm","delayF","delay","stepF","step","amountF","amount","$47d4ff9957288465$var$resultPromis","$47d4ff9957288465$var$createPromise","position","setTimeout","Math","random","Promise","resolve","reject","then","result","console","log","error","addEventListener","event","preventDefault","type","elements","currentTarget","value","alert","valueAsNumber","i","push","reset"],"version":3,"file":"03-promises.5085f9fe.js.map"}