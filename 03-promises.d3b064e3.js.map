{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,SAIhCC,GAHWF,SAASC,cAAc,UAGnB,IAErB,SAASE,EAAcC,EAAUC,GACTC,KAAKC,SAGX,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KAIPF,EAAQ,CAAEL,SAAUA,EAAUC,MAAOA,GAIQ,GAE9CA,EAAM,IAIRO,MACCC,IAEEX,EAAaE,EAAW,GAAKS,EAG3BC,QAAMC,IAAIb,EAAa,IAE3Bc,IAGId,EAAWE,EAAW,GAAKY,EAE7BF,QAAQC,IAAIb,EAAa,IAG5Be,OAAMC,GAAOJ,QAAQC,IAAIG,I,CA0B9BnB,EAAOoB,iBAAiB,UAvBPC,IACfA,EAAMC,iBACNP,QAAQC,IAAIK,EAAME,MAClB,MACEC,UAAUlB,MAAEA,EAAKmB,KAAEA,EAAIC,OAAEA,IACvBL,EAAMM,cACV,GAAoB,KAAhBrB,EAAMsB,OAA+B,KAAfH,EAAKG,OAAiC,KAAjBF,EAAOE,MACpD,OAAOC,MAAM,6BAIf,MAAMC,EAASxB,EAAMyB,cACfC,EAAQP,EAAKM,cACbE,EAAUP,EAAOK,cAEvB,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAU,EAAGC,GAAK,EACpC/B,EAAagC,KAAK,IAClB/B,EAAc8B,EAAGJ,EAASE,GAASE,EAAI,IAEzCb,EAAMM,cAAcS,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\nconst buttonEl = document.querySelector('button');\n//console.log(buttonEl);\n\nconst resultPromis = [];\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  //console.log(shouldResolve);\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        //resolve(`✅ Fulfilled promise ${position} in ${delay}ms`); // Fulfill\n        //resolve(position)(delay);\n        resolve({ position: position, delay: delay });\n      } else {\n        //reject(`❌ Rejected promise ${position} in ${delay}ms`); // Reject\n        // resolve(position);\n        resolve({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(\n      result => {\n        //console.log(result);\n        resultPromis[position - 1] = result;\n        //resultPromis[position - 1].delay = result;\n        // alert(`✅ \"${result}\"`);\n        console.log(resultPromis);\n      },\n      error => {\n        // console.log(error);\n        // alert(`❌ \"${error}\"`);\n        resultPromis[position - 1] = error;\n        //resultPromis[position - 1].delay = error;\n        console.log(resultPromis);\n      }\n    )\n    .catch(err => console.log(err));\n}\n\nconst onSubmit = event => {\n  event.preventDefault();\n  console.log(event.type);\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  if (delay.value === '' || step.value === '' || amount.value === '') {\n    return alert('Заповнить всі поля форми>');\n  }\n\n  // console.log(`email: ${email.value}, Password: ${password.value}`);\n  const delayF = delay.valueAsNumber;\n  const stepF = step.valueAsNumber;\n  const amountF = amount.valueAsNumber;\n\n  for (let i = 1; i < amountF + 1; i += 1) {\n    resultPromis.push({});\n    createPromise(i, delayF + stepF * (i - 1));\n  }\n  event.currentTarget.reset();\n};\n\n//formEl.addEventListener('input', inputForm);\nformEl.addEventListener('submit', onSubmit);\n"],"names":["$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$resultPromis","$47d4ff9957288465$var$createPromise","position","delay","Math","random","Promise","resolve","reject","setTimeout","then","result","console","log","error","catch","err","addEventListener","event","preventDefault","type","elements","step","amount","currentTarget","value","alert","delayF","valueAsNumber","stepF","amountF","i","push","reset"],"version":3,"file":"03-promises.d3b064e3.js.map"}