{"mappings":"AAAA,MAAMA,EAASC,SAASC,cAAc,SAIhCC,GAHWF,SAASC,cAAc,UAGnB,IAErB,SAASE,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAGtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAiCbN,EAAOc,iBAAiB,UA7BPC,IACfA,EAAMC,iBACNC,QAAQC,IAAIH,EAAMI,MAClB,MACEC,UAAYd,MAAAe,EAAKC,KAAEA,EAAIC,OAAEA,IACvBR,EAAMS,cACV,GAAoB,KAAhBH,EAAMI,OAA+B,KAAfH,EAAKG,OAAiC,KAAjBF,EAAOE,MACpD,OAAOC,MAAM,6BAIf,MAAMC,EAASN,EAAMO,cACfC,EAAQP,EAAKM,cACbE,EAAUP,EAAOK,cAEvB,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAU,EAAGC,GAAK,EACpC5B,EAAa6B,KAAK,IAClB5B,EAAc2B,EAAGJ,EAASE,GAASE,EAAI,IACpCE,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MACjBW,QAAQC,IAAI,uBAAqBb,QAAiBC,MAAU,IAE7D4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBW,QAAQC,IAAI,sBAAoBb,QAAeC,MAAU,IAG/DS,EAAMS,cAAcW,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('.form');\nconst buttonEl = document.querySelector('button');\n//console.log(buttonEl);\n\nconst resultPromis = [];\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  //console.log(shouldResolve);\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst onSubmit = event => {\n  event.preventDefault();\n  console.log(event.type);\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  if (delay.value === '' || step.value === '' || amount.value === '') {\n    return alert('Заповнить всі поля форми>');\n  }\n\n  // console.log(`email: ${email.value}, Password: ${password.value}`);\n  const delayF = delay.valueAsNumber;\n  const stepF = step.valueAsNumber;\n  const amountF = amount.valueAsNumber;\n\n  for (let i = 1; i < amountF + 1; i += 1) {\n    resultPromis.push({});\n    createPromise(i, delayF + stepF * (i - 1))\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  event.currentTarget.reset();\n};\n\n//formEl.addEventListener('input', inputForm);\nformEl.addEventListener('submit', onSubmit);\n"],"names":["$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$resultPromis","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","console","log","type","elements","delay1","step","amount","currentTarget","value","alert","delayF","valueAsNumber","stepF","amountF","i","push","then","catch","reset"],"version":3,"file":"03-promises.b132da65.js.map"}